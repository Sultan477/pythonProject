# > Игра в камни
# Вам дан массив из целых чисел stones, содержащий веса камней.
# Вы играете в игру с камнями. За каждый ход выбираются два самых тяжелых камня,
# бьются друг об друга и разбиваются. Если веса камней равны, то они оба уничтожаются,
# в противном случае уничтожается самый легкий из них, а из другого вычитается вес самого легкого.
# Более формально, пусть x и y соответствуют весам камней и x <= y.
# Тогда исход удара будет:
# Оба камня уничтожены, если x == y.
# Из двух камней останется один камень весом y - x, если x < y.
# Игра длится до тех пор, пока не останется один или ноль камней.
# Напишите функцию last_stone(stones),
# которая принимает на вход массив весов камней и возвращает вес оставшегося в конце игры камня.
# Если к концу игры не останется камней, функция должна возвращать 0.

import heapq

def last_stone(stones):
    # Преобразуем веса камней в отрицательные числа для использования кучи
    stones = [-stone for stone in stones]
    # Преобразуем список в кучу
    heapq.heapify(stones)

    while len(stones) > 1:
        # Выбираем самый тяжелый камень
        y = -heapq.heappop(stones)
        # Выбираем второй самый тяжелый камень
        x = -heapq.heappop(stones)

        # Добавляем новый камень с весом y-x
        if x != y:
            heapq.heappush(stones, -(y - x))

    if stones:
        return -stones[0]
        # Возвращаем вес оставшегося камня
    else:
        return 0
        # Если не осталось камнейб возвращаем 0

# if __name__ == '__main__':
#     stones = [2, 7, 4, 1, 8, 1]
#     result = last_stone(stones)
#     print(result)