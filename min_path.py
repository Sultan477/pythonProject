# Путь наименьшей длины
# Вам дано поле grid размера m x n, заполненное неотрицательными числами.
# Найдите путь с левого верхнего угла до правого нижнего, для которого сумма чисел будет минимальна.
# Двигаться по полю можно только вправо и вниз.
# Напишите функцию min_path(grid),
# которая на вход будет получать двумерный массив (список списков) и возвращать одно число — наименьшую сумму.
# grid = [[1, 3, 1], [1, 5, 1], [4, 2, 1]] даст 7

def min_path(grid):
    m = len(grid)
    n = len(grid[0])

    # Заполняем верхний край
    for j in range(1, n):
        grid[0][j] += grid[0][j-1]

    # Заполняем левый край
    for i in range(1, m):
        grid[i][0] += grid[i-1][0]

    # Заполняем остальные ячейки
    for i in range(1, m):
        for j in range(1, n):
            grid[i][j] += min(grid[i-1][j], grid[i][j-1])

    return grid[m-1][n-1]


if __name__ == '__main__':

    grid = [[1, 3, 1], [1, 5, 1], [4, 2, 1]]
    result = min_path(grid)
    print(result)